{"version":3,"sources":["components/ToDoItem.js","components/Popup.js","components/ToDoList.js","App.js","index.js"],"names":["StyledButton","withStyles","root","background","borderRadius","border","color","height","padding","boxShadow","width","label","textTransform","Button","ListItem","props","tasks","useState","isChecked","setIsChecked","map","element","index","console","log","finished","className","key","name","time","pmAm","onClick","delete","type","checked","onChange","id","Popup","isActive","icon","faTimes","SubmitButton","ToDoList","counter","setCounter","initialItem","setTasks","useEffect","task","setTask","popup","setPopup","newTask","val","onSubmit","e","preventDefault","placeholder","value","target","prevState","min","max","newTasks","filter","item","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ddded60e.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst StyledButton = withStyles({\r\n    root: {\r\n        background: 'linear-gradient(45deg, #ee57fbb3 30%, #00adb5 90%)',\r\n        borderRadius: 3,\r\n        border: 0,\r\n        color: 'white',\r\n        height: 48,\r\n        padding: '0 30px',\r\n        boxShadow: '0 3px 5px 2px rgba(34, 40, 49, .5)',\r\n        width: '64px',\r\n        height: '40px',\r\n    },\r\n    label: {\r\n        textTransform: 'capitalize',\r\n    },\r\n})(Button);\r\n\r\nfunction ListItem(props) {\r\n    const tasks = props.tasks;\r\n    const [isChecked, setIsChecked] = useState(false);\r\n\r\n    return tasks.map((element, index) => {\r\n        console.log(element.finished)\r\n        return <li className=\"lititem\" key={index}><span className={element.finished ? 'text crossed' : 'text'}>{element.name}: {element.time} {element.pmAm}</span>\r\n            <StyledButton className=\"lititem-btn\" onClick={() => props.delete(index)}>delete</StyledButton>\r\n            <label className=\"container\">\r\n                <input type=\"checkbox\" checked={element.finished}\r\n                    onChange={() => {\r\n                        setIsChecked(!isChecked);\r\n                        props.checked(!element.finished, element.id)\r\n                    }}></input>\r\n                <span className=\"checkmark\">{isChecked}</span>\r\n            </label>\r\n        </li>\r\n    })\r\n}\r\n\r\n\r\nexport default ListItem;","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst Popup = ({isActive}) => {\r\n    return (\r\n        <div className=\"popup\" onClick={() => {\r\n            isActive(false)\r\n        }}>\r\n            <div className=\"popup-info\">\r\n                <p>Please, add a task...</p>\r\n                <FontAwesomeIcon icon={faTimes} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Popup;","import React, { useState, useEffect } from 'react';\r\nimport ListItem from './ToDoItem';\r\nimport Button from '@material-ui/core/Button';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Popup from './Popup';\r\n\r\nconst SubmitButton = withStyles({\r\n    root: {\r\n        background: '#00adb5',\r\n        borderRadius: 3,\r\n        border: 0,\r\n        color: 'white',\r\n        height: 48,\r\n        padding: '0 30px',\r\n        boxShadow: '0 3px 5px 2px rgba(34, 40, 49, .5)',\r\n    },\r\n    label: {\r\n        textTransform: 'capitalize',\r\n    },\r\n})(Button);\r\n\r\nconst ToDoList = () => {\r\n    let [counter, setCounter] = useState(0);\r\n    let initialItem = {\r\n        id: counter,\r\n        name: '',\r\n        time: '00:00',\r\n        pmAm: 'a.m.',\r\n        finished: false,\r\n    }\r\n\r\n    const [tasks, setTasks] = useState([]);\r\n    useEffect(() => console.log('THE ARRAY OF TASKS', tasks), [tasks]);\r\n\r\n    const [task, setTask] = useState(initialItem);\r\n\r\n    const [popup, setPopup] = useState(false);\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (task.name === '') {\r\n            console.log('popup');\r\n            setPopup(true);\r\n        } else {\r\n            setCounter(counter => counter + 1);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (counter > 0) {\r\n            const newTask = { ...task, id: counter };\r\n            setTasks([...tasks, newTask]);\r\n            setTask(initialItem);\r\n        }\r\n    }, [counter]);\r\n\r\n    const deleteItem = (id) => {\r\n        let newTasks = tasks.filter((item, index) => {\r\n            return index !== id\r\n        });\r\n        setTasks(newTasks);\r\n    }\r\n\r\n    const handleCheckbox = (val, id) => {\r\n        tasks.map((element) => {\r\n            if (element.id === id) {\r\n                element.finished = val\r\n            }\r\n        })\r\n        console.log('UPDATED TASKS', tasks)\r\n    }\r\n\r\n    const handlePopup = (val) => {\r\n        setPopup(val);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"form-container\">\r\n                {popup && <Popup isActive={handlePopup}></Popup>}\r\n                <form onSubmit={handleSubmit}>\r\n                    <input className=\"task-input\" placeholder=\"Add a task\" onChange={(e) => {\r\n                        let value = e.target.value;\r\n                        setTask(prevState => {\r\n                            return { ...prevState, name: value }\r\n                        })\r\n                    }}\r\n                        value={task.name}></input>\r\n\r\n                    <div>\r\n                        <input placeholder=\"Add time\" id=\"time\" type=\"time\" min=\"00:00\" max=\"12:59\" onChange={(e) => {\r\n                            let value = e.target.value;\r\n                            setTask(prevState => {\r\n                                return { ...prevState, time: value }\r\n                            })\r\n                        }} value={task.time}></input>\r\n\r\n                        <select value={initialItem.pmAm} onChange={(e) => {\r\n                            let value = e.target.value;\r\n                            setTask(prevState => {\r\n                                return { ...prevState, pmAm: value }\r\n                            })\r\n                        }}>\r\n                            <option value=\"a.m.\">a.m.</option>\r\n                            <option value=\"p.m.\">p.m.</option>\r\n                        </select>\r\n                    </div>\r\n                    <SubmitButton type=\"submit\">Submit</SubmitButton>\r\n                </form>\r\n            </div>\r\n            <ul className=\"todolist-container\">\r\n                <ListItem tasks={tasks} delete={deleteItem} checked={handleCheckbox} />\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ToDoList;","import React from 'react';\nimport './App.scss';\nimport ToDoList from './components/ToDoList';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ToDoList />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}